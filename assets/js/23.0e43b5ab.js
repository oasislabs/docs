(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{369:function(e,t,s){"use strict";s.r(t);var n=s(42),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"sentry-node-architecture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sentry-node-architecture"}},[e._v("#")]),e._v(" Sentry Node Architecture")]),e._v(" "),s("p",[e._v("This guide provides instructions for a deployment using the Sentry node\narchitecture to protect validator nodes from being directly exposed on the\npublic network.")]),e._v(" "),s("p",[e._v("This guide assumes a setup where an Oasis validator node is only accessible\nover a private network, with sentry nodes having access to it.\nThe guide does not cover setting this infrastructure up.\nKnowledge of "),s("a",{attrs:{href:"https://forum.cosmos.network/t/sentry-node-architecture-overview/454",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tendermint's Sentry Node architecture"),s("OutboundLink")],1),e._v(" is assumed as\nwell.")]),e._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("This is only an example of a Sentry node deployment, and we take no responsibility\nfor mistakes contained therein.\nMake sure you understand what you are doing.")])]),e._v(" "),s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),s("p",[e._v("Before following this guide, make sure you've read the "),s("RouterLink",{attrs:{to:"/operators/prerequisites.html"}},[e._v("Prerequisites")]),e._v(" and\n"),s("RouterLink",{attrs:{to:"/operators/running-node-on-amber-network.html"}},[e._v("Running a Node on the Amber Network")]),e._v(" guides and created your Entity.")],1),e._v(" "),s("h2",{attrs:{id:"configuring-the-oasis-sentry-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-oasis-sentry-node"}},[e._v("#")]),e._v(" Configuring the Oasis Sentry Node")]),e._v(" "),s("h3",{attrs:{id:"initializing-sentry-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializing-sentry-node"}},[e._v("#")]),e._v(" Initializing Sentry Node")]),e._v(" "),s("p",[e._v("Sentry node identity keys can be initialized with:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node identity init --datadir /serverdir/node\n")])])]),s("p",[e._v("The generated "),s("code",[e._v("tls_identity_cert.pem")]),e._v(" (which is the node's TLS cert for\nsecuring gRPC connections) needs to be available on any node that will be\nprotected by the sentry node.")]),e._v(" "),s("h3",{attrs:{id:"configuring-sentry-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-sentry-node"}},[e._v("#")]),e._v(" Configuring Sentry Node")]),e._v(" "),s("p",[e._v("An Oasis node can be configured to run as a sentry node by setting the\n"),s("code",[e._v("worker.sentry.enabled")]),e._v(" flag. The "),s("code",[e._v("tendermint.sentry.upstream_address")]),e._v("\nflag can be used to configure a list of nodes that will be protected by the\nsentry node.")]),e._v(" "),s("p",[e._v("An example of full "),s("code",[e._v("YAML")]),e._v(" configuration of a sentry node is below.")]),e._v(" "),s("p",[e._v("Before using this configuration you should collect the following information to\nreplace the "),s("code",{pre:!0},[e._v("{{ var_name }}")]),e._v(" variables present in the\nconfiguration file:")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",{pre:!0},[e._v("{{ external_address }}")]),e._v(": This is the external IP on which\nsentry node will be reachable.")])]),e._v(" "),s("li",[s("p",[s("code",{pre:!0},[e._v("{{ seed_node_address }}")]),e._v(": This the seed node address of the\nform "),s("code",[e._v("ID@IP:port")]),e._v(". You can find the current Oasis Seed Node address in the\n"),s("RouterLink",{attrs:{to:"/operators/current-testnet-parameters.html"}},[e._v("Current Testnet Parameters")]),e._v(".")],1)]),e._v(" "),s("li",[s("p",[s("code",{pre:!0},[e._v("{{ validator_tendermint_id }}")]),e._v(": This is the Tendermint ID\n(address) of the Oasis validator node that will be protected by the sentry\nnode. This ID can be obtained by running:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node identity tendermint show-node-address --datadir /serverdir/node\n")])])]),s("p",[e._v("on the validator node.")])]),e._v(" "),s("li",[s("p",[s("code",{pre:!0},[e._v("{{ validator_private_address }}")]),e._v(": This is the (presumably)\nprivate address on which validator should be reachable from the sentry node.")])]),e._v(" "),s("li",[s("p",[s("code",{pre:!0},[e._v("{{ validator_sentry_client_grpc_public_key }}")]),e._v(": This is the\npublic TLS key of the Oasis validator node that will be protected by the\nsentry node. This public key can be obtained by running:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v(" oasis-node identity show-sentry-client-pubkey --datadir /serverdir/node\n")])])]),s("p",[e._v("on the validator node. Note that the above command is only available in\n"),s("code",[e._v("oasis-node")]),e._v(" from version 20.8.1 onward.")])])]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Oasis Sentry Node Configuration")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This file's configurations are derived from the command line args found in the")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# root command of the oasis-node binary. For more information execute:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     oasis-node --help")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Settings on the command line that are separated by a dot all belong to the")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# same nested object. So "--foo.bar.baz hello" would translate to:')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     foo:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       bar:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#         baz: hello")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set this to where you wish to store node data. The node artifacts")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# should also be located in this directory (for us this is /serverdir/node)")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("datadir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/node\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Logging.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Per-module log levels are defined below. If you prefer just one unified log")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# level, you can use:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# log:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   level: debug")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Per-module log levels. Longest prefix match will be taken. Fallback to")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# "default", if no match.')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" debug\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" warn\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint/context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" error\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" JSON\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# By default logs are output to stdout. If you're running this in docker keep")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the default")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#file: /var/log/oasis-node.log")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Path to the genesis file for the current version of the network.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("genesis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/etc/genesis.json\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Worker configuration.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("worker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("sentry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Enable sentry node.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Port used by validator nodes to query sentry node for registry")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# information.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# IMPORTANT: Only validator nodes protected by the sentry node should have")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# access to this port. This port should not be exposed on the public")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# network.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("control")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("9009")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("authorized_pubkey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" validator_sentry_client_grpc_public_key "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Tendermint backend configuration.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("abci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("prune")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("strategy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" keep_n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Keep ~1 hour of data since block production is ~1 block every 6 seconds.")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# (3600/6 = 600)")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("num_kept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("600")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("core")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("listen_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" tcp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//0.0.0.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("26656")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("external_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" tcp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" external_address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("26656")]),e._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# List of seed nodes to connect to.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# NOTE: You can add additional seed nodes to this list if you want.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("p2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("seed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{ seed_node_address }}"')]),e._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("sentry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("upstream_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{ validator_tendermint_id }}@{{ validator_private_address }}:26656"')]),e._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("Multiple sentry nodes can be provisioned following the above steps.")])]),e._v(" "),s("h2",{attrs:{id:"configuring-the-oasis-validator-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-oasis-validator-node"}},[e._v("#")]),e._v(" Configuring the Oasis Validator Node")]),e._v(" "),s("p",[e._v("In this setup the Oasis validator node should not be exposed directly on the\npublic network. The Oasis validator only needs to be able to connect to its\nsentry nodes, preferably via a private network.")]),e._v(" "),s("h3",{attrs:{id:"initializing-validator-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializing-validator-node"}},[e._v("#")]),e._v(" Initializing Validator Node")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("If your validator node is already registered and running in a non-sentry setup,\nthis step can be skipped as the Oasis validator will update its address in the\nRegistry automatically once we redeploy it with new configuration.")])]),e._v(" "),s("p",[e._v("When you are "),s("RouterLink",{attrs:{to:"/operators/running-node-on-amber-network.html#initializing-a-node"}},[e._v("initializing a validator node")]),e._v(", you should use the\nsentry node's external address and Consensus ID in the\n"),s("code",[e._v("node.consensus_address")]),e._v(" flag.\nIf you are running multiple sentry nodes, you can specify the\n"),s("code",[e._v("node.consensus_address")]),e._v(" flag multiple times.")],1),e._v(" "),s("p",[e._v("To initialize a validator node with 2 sentry nodes, run the\nfollowing commands from the "),s("code",[e._v("/localhostdir/node")]),e._v(" directory:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SENTRY1_CONSENSUS_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("YOUR_SENTRY1_CONSENSUS_ID_B6"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("4")]),e._v(">")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SENTRY1_STATIC_IP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("YOUR_SENTRY1_STATIC_IP"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SENTRY2_CONSENSUS_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("YOUR_SENTRY2_CONSENSUS_ID_B6"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("4")]),e._v(">")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SENTRY2_STATIC_IP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("YOUR_SENTRY2_STATIC_IP"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\noasis-node registry node init "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.backend "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.dir /localhostdir/entity "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --node.consensus_address "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SENTRY1_CONSENSUS_ID")]),e._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SENTRY1_STATIC_IP")]),e._v(":26656 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --node.consensus_address "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SENTRY2_CONSENSUS_ID")]),e._v("@"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SENTRY2_STATIC_IP")]),e._v(":26656 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --node.is_self_signed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --node.role validator\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[s("code",[e._v("SENTRY_CONSENSUS_ID")]),e._v(": This is the Consensus ID of the sentry node in base64\nformat.\nThis ID can be obtained from "),s("code",[e._v("consensus_pub.pem")]),e._v(":")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" -n 2p /serverdir/node/consensus_pub.pem\n")])])]),s("p",[e._v("on the sentry node.")])]),e._v(" "),s("h3",{attrs:{id:"configuring-validator-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-validator-node"}},[e._v("#")]),e._v(" Configuring Validator Node")]),e._v(" "),s("p",[e._v("There are some configuration changes needed for the Oasis validator node to\nenable proxying through its sentry node. Most of these flags should be familiar\nfrom the Tendermint sentry node architecture.")]),e._v(" "),s("p",[e._v("Since the validator node will not have an external address, the\n"),s("code",[e._v("tendermint.core.external_address")]),e._v(" flag should be skipped. Similarly, the\n"),s("code",[e._v("tendermint.p2p.seed")]),e._v(" flag can be skipped, as the "),s("code",[e._v("oasis-node")]),e._v(" won't be directly\nconnecting to any of the seed nodes.")]),e._v(" "),s("p",[e._v("Tendermint Peer Exchange should be disabled on the validator with the\n"),s("code",[e._v("tendermint.p2p.disable_peer_exchange")]),e._v(" flag.")]),e._v(" "),s("p",[e._v("Sentry nodes can also be configured as Tendermint Persistent-Peers with the\n"),s("code",[e._v("tendermint.p2p.persistent_peer")]),e._v(" flag.")]),e._v(" "),s("p",[e._v("In addition to the familiar Tendermint setup above, the node needs to be\nconfigured to query sentry nodes for external addresses every time the validator\npreforms a re-registration. This is configured with the "),s("code",[e._v("worker.sentry.address")]),e._v("\nflag.")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("worker.sentry.address")]),e._v(" flag is of format: "),s("code",[e._v("<pubkey>@ip:port")]),e._v("\nwhere:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("<pubkey>")]),e._v(": Is the sentry node's TLS public key.")]),e._v(" "),s("li",[s("code",[e._v("ip:port")]),e._v(": Is the (private) address of the sentry node's control endpoint.")])]),e._v(" "),s("p",[e._v("Putting it all together, an example configuration of a validator node in the\nsentry node architecture is given below.")]),e._v(" "),s("p",[e._v("Before using this configuration you should collect the following information to\nreplace the "),s("code",{pre:!0},[e._v("{{ var_name }}")]),e._v(" variables present in the configuration\nfile:")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",{pre:!0},[e._v("{{ sentry_node_private_ip }}")]),e._v(": This is the private IP\naddress of the sentry node over which sentry node should be accessible to the\nvalidator.")])]),e._v(" "),s("li",[s("p",[s("code",{pre:!0},[e._v("{{ sentry_node_grpc_public_key }}")]),e._v(": This is the sentry\nnode's control endpoint TLS public key. This ID can be obtained by running:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node identity show-tls-pubkey --datadir /serverdir/node\n")])])]),s("p",[e._v("on the sentry node. Note that the above command is only available in\n"),s("code",[e._v("oasis-node")]),e._v(" from version 20.8.1 onward.")])]),e._v(" "),s("li",[s("p",[s("code",{pre:!0},[e._v("{{ sentry_node_tendermint_id }}")]),e._v(": This is the Tendermint ID\n(address) of the sentry node that will be configured as a Persistent Peer.\nThis ID can be obtained by running:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node identity tendermint show-node-address --datadir /serverdir/node\n")])])]),s("p",[e._v("on the sentry node.")])])]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Oasis Node Configuration")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This file's configurations are derived from the command line args found in")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the root command of the oasis-node binary. For more information execute:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     oasis-node --help")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Settings on the command line that are separated by a dot all belong to the")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# same nested object. So "--foo.bar.baz hello" would translate to:')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     foo:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       bar:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#         baz: hello")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set this to where you wish to store node data. The node artifacts")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# should also be located in this directory (for us this is /serverdir/node)")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("datadir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/node\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Logging.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Per-module log levels are defined below. If you prefer just one unified log")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# level, you can use:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# log:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   level: debug")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Per-module log levels. Longest prefix match will be taken. Fallback to")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# "default", if no match.')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" debug\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" warn\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint/context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" error\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" JSON\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# By default logs are output to stdout. If you're running this in docker keep")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the default")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#file: /var/log/oasis-node.log")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Path to the genesis file for the current version of the network.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("genesis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/etc/genesis.json\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Worker configuration.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("worker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("registration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# In order for the node to register itself the entity.json of the entity")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# used to provision the node must be available on the node.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("entity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/node/entity/entity.json\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("sentry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{ sentry_node_grpc_public_key }}@{{ sentry_node_private_ip }}:9009"')]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Consensus backend.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("consensus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Setting this to true will mean that the node you're deploying will attempt")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# to register as a validator.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("validator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("True")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Tendermint backend configuration.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("abci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("prune")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("strategy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" keep_n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Keep ~7 days of data since block production is ~1 block every 6 seconds.")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# (7*24*3600/6 = 100800)")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("num_kept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("100800")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("core")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("listen_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" tcp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//0.0.0.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("26656")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("p2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("persistent_peer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{ sentry_node_tendermint_id }}@{{ sentry_node_private_ip }}:26656"')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("disable_peer_exchange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("True")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("db")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("backend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" badger\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);