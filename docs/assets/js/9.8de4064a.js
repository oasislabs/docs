(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{267:function(t,e,s){"use strict";s.r(e);var a=s(38),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"creating-a-private-chat-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-private-chat-server","aria-hidden":"true"}},[t._v("#")]),t._v(" Creating a Private Chat Server")]),t._v(" "),s("p",[t._v("In this tutorial we will create a private, uncensorable messaging service.\nThis tutorial demonstrates intermediate concepts: events and composed types.")]),t._v(" "),s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),s("p",[t._v("This tutorial assumes that you're already familiar with the concepts presented in the "),s("a",{attrs:{href:"../ballot-tutorial"}},[t._v("previous tutorial")]),t._v(".\nAs such, this won't be a step-by-step tutorial, but rather more of a sightseeing tour.\nThe full example can be found at "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/tree/master/examples/messaging",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/oasislabs/oasis-rs/tree/master/examples/messaging"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"optional-and-user-defined-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-and-user-defined-types","aria-hidden":"true"}},[t._v("#")]),t._v(" Optional and User-Defined Types")]),t._v(" "),s("h3",{attrs:{id:"optional-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-types","aria-hidden":"true"}},[t._v("#")]),t._v(" Optional types")]),t._v(" "),s("p",[t._v("Any item of state or RPC argument can be made optional by wrapping it in "),s("a",{attrs:{href:"https://doc.rust-lang.org/std/option/enum.Option.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Option")]),s("OutboundLink")],1),t._v(" type.\n"),s("code",[t._v("Option")]),t._v(" is comparable to "),s("code",[t._v("null")]),t._v("/"),s("code",[t._v("None")]),t._v("/"),s("code",[t._v("Maybe")]),t._v(" in other languages.\nYou will hopefully find this very unsurprising.")]),t._v(" "),s("p",[t._v("You'll find the first use of "),s("code",[t._v("Option")]),t._v(" in the definition of the "),s("code",[t._v("MessageBoard")]),t._v(" service state on "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/blob/master/examples/messaging/src/lib.rs#L17",target:"_blank",rel:"noopener noreferrer"}},[t._v("line 17"),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[derive(Service)]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" MessageBoard "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    bcast_char_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Option"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("u32"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("and, on "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/blob/master/examples/messaging/src/lib.rs#L228",target:"_blank",rel:"noopener noreferrer"}},[t._v("line 228"),s("OutboundLink")],1),t._v(", an example of setting the character limit to one: "),s("code",[t._v("Some(1)")]),t._v(".")]),t._v(" "),s("p",[t._v("On "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/blob/master/examples/messaging/src/lib.rs#L145",target:"_blank",rel:"noopener noreferrer"}},[t._v("line 145"),s("OutboundLink")],1),t._v(" a tuple of optional types are observed in the context of an RPC function signature: "),s("code",[t._v("range: (Option<PostId>, Option<PostId>)")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"user-defined-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user-defined-types","aria-hidden":"true"}},[t._v("#")]),t._v(" User-defined types")]),t._v(" "),s("p",[t._v("Any composition of RPC types is an RPC type.\nSo basically things like "),s("code",[t._v("HashMap<Vec<(u8, i8)>, Option<String>>")]),t._v(" and any "),s("code",[t._v("struct")]),t._v(" containing things like that.\nAs a concrete example, on "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/blob/master/examples/messaging/src/lib.rs#L48",target:"_blank",rel:"noopener noreferrer"}},[t._v("line 48"),s("OutboundLink")],1),t._v(", we define a "),s("code",[t._v("Message")]),t._v(" with the fields "),s("code",[t._v("user: UserId")]),t._v(" and "),s("code",[t._v("text: String")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[derive(Serialize, Deserialize, Clone, Debug, PartialEq)]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Message "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" UserId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("There's no special syntax for this; the new type is just a Rust struct.\nLike any struct you can add methods and trait implementations using "),s("code",[t._v("impl")]),t._v(" and "),s("code",[t._v("#[derive(..)]")]),t._v(".\nIndeed, we derive "),s("code",[t._v("PartialEq")]),t._v(" on we "),s("code",[t._v("Message")]),t._v(" so that we can "),s("code",[t._v("assert_eq!")]),t._v(" in the tests.")]),t._v(" "),s("p",[t._v("Then, on "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/blob/master/examples/messaging/src/lib.rs#L36",target:"_blank",rel:"noopener noreferrer"}},[t._v("line 36"),s("OutboundLink")],1),t._v(" we increase the level of abstraction by creating a "),s("code",[t._v("Post")]),t._v(" type that contains a stores a list of comments as "),s("code",[t._v("Vec<Message>")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Post "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    comments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Vec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("And a "),s("code",[t._v("MessageBoard")]),t._v(" is simply a collection of "),s("code",[t._v("Posts")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events","aria-hidden":"true"}},[t._v("#")]),t._v(" Events!")]),t._v(" "),s("p",[t._v("Whereas RPC methods send data back to the caller, events send data to every client watching the blockchain.")]),t._v(" "),s("p",[t._v('Events are a versatile primitive and can be used for beyond the standard "hey something happened!" that one would see in Node.js.\nFor example, because events are emitted by confidential services running on the Oasis platform, they can be used to notarize their inputs.\nConcretely, one could make a validation service that certifies its input by emitting a hash of the data; because the service runs on the Oasis platform, clients can trust the certificate.\nFurthermore, confidential services can securely encrypt event data so that it can only be read by a restricted set of recipients.\nEnough exposition, though: on to the main event!')]),t._v(" "),s("h3",{attrs:{id:"defining-events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defining-events","aria-hidden":"true"}},[t._v("#")]),t._v(" Defining events")]),t._v(" "),s("p",[t._v("Events are defined similarly to service state in that they're (de)serializable structs that derive a particular trait.\nFor events, they derive "),s("a",{attrs:{href:"https://docs.rs/oasis-std/0.1.0/oasis-std/exe/trait.Event.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Event")]),s("OutboundLink")],1),t._v(" instead of "),s("code",[t._v("Service")]),t._v(".\nAptly named, yes?")]),t._v(" "),s("p",[t._v("The message board helpfully notifies participants of a new post or direct message using the "),s("code",[t._v("MessagePosted")]),t._v(" event on "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/blob/master/examples/messaging/src/lib.rs#L64",target:"_blank",rel:"noopener noreferrer"}},[t._v("line 64"),s("OutboundLink")],1),t._v(" (reproduced below).\nThe "),s("a",{attrs:{href:"https://github.com/oasislabs/oasis-rs/blob/master/examples/messaging/src/lib.rs#L58-L62",target:"_blank",rel:"noopener noreferrer"}},[t._v("comment above the definition"),s("OutboundLink")],1),t._v(" explains how events might be used safely in a confidential context.")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[derive(Serialize, Deserialize, Event)]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" MessagePosted "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[indexed]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" UserId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[indexed]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" recipient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Option"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("UserId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The only thing that should give you pause here is the "),s("code",[t._v("#[indexed]")]),t._v(" attribute.\nThe explanation is simple: the contents of a field annotated with "),s("code",[t._v("#[indexed]")]),t._v(" will be... wait for it... indexed so that clients watching the blockchain can efficiently find matching events.\nNote that currently only three events may be indexed, but this may change in the future.\nAnd, of course, events may contain as much non-indexed data as you want.\nAll data, indexed and otherwise, is emitted with the event.")]),t._v(" "),s("h3",{attrs:{id:"emitting-events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emitting-events","aria-hidden":"true"}},[t._v("#")]),t._v(" Emitting events")]),t._v(" "),s("p",[t._v("Speaking of emitting events, here's how to do it!\nJust construct the event struct and the "),s("code",[t._v("Event")]),t._v(" trait provides the rest:")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("Event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MessagePosted "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sender")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    recipient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("or, equivalently, as called on the event object itself,")]),t._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[t._v("MessagePosted "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sender")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    recipient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Hopefully you found that exposition of events eventful!"),s("br"),t._v("\nBonus joke: What's a blockchain developer's favorite event? A block party! Ha ha")]),t._v(" "),s("p",[t._v('"Ugh, get this over with already," you think to yourself.')]),t._v(" "),s("h2",{attrs:{id:"you-made-it"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#you-made-it","aria-hidden":"true"}},[t._v("#")]),t._v(" You made it!")]),t._v(" "),s("p",[t._v("Congratulations on completing the second tutorial!\nYou should now feel confident that you can confidentially discuss your dinner ballot choices, trash talk other sportsball teams, and keep up with your community of fellow Rust enthusiasts.")]),t._v(" "),s("p",[t._v("Well, that's basically all there is to writing blockchain services.\nThe only other thing to mention is that there's a wealth of libraries for you to use on "),s("a",{attrs:{href:"https://crates.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("crates.io"),s("OutboundLink")],1),t._v(", the Cargo registry (c.f. NPM).\nYou're now fully equipped to start building on the Oasis platform.\nWe look forward to seeing what you create!\nIf you need any help, you can check out the "),s("a",{attrs:{href:"https://oasis-labs-oasis-client.readthedocs-hosted.com/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("oasis.js API reference"),s("OutboundLink")],1),t._v(" and get support from the "),s("a",{attrs:{href:"https://gitter.im/Oasis-official/Lobby",target:"_blank",rel:"noopener noreferrer"}},[t._v("community"),s("OutboundLink")],1),t._v(".")])])},[],!1,null,null,null);e.default=n.exports}}]);